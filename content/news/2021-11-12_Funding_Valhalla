---
title: "Globaler Valhalla Server online"
date: "2021-11-12T15:00:00+02:00"
author: "Nils Nolde"
---

Zusätzlich zum bereits existierenden und viel genutzten OSRM Server hat der FOSSGIS e.V. nun einen [Förderantrag](https://www.fossgis.de/wiki/Förderanträge/Valhalla-Routingserver) genehmigt für die Bereitstellung einer globalen und freien Server Instanz der FOSS Routing Software [Valhalla](https://github.com/valhalla/valhalla).

## Was ist Valhalla?

Valhalla baut, im Gegensatz zu den meisten vergleichbaren FOSS Lösungen, auf einem gekachelten Graphen auf, der, ähnlich wie Map Vector Tiles, in eine Hierarchie gegliedert ist. Damit wird der RAM Verbrauch beim Betrieb eines Servers relativ gering gehalten, gleichzeitig können alle Bewegungsprofile auf dem gleichen Graphen agieren. Aufgrund der hoch flexiblen Routingalgorithmen und der reichhaltigen Attribution in den Kacheln, lässt sich die Routenfindung mit vielen Einstellungsmöglichkeiten bei jeder Routenanfrage anpassen, u.a.:
- Polygone vermeiden, z.Bsp. bei großen Events oder temporäre Baustellen
- Fahrzeugdimensionen einhalten, z.Bsp. Höhe und Gewicht des Autos/LKWs
- Höhenmeter vermeiden oder begünstigen für Fahrrad/Fußgänger
- jede Menge anderer "Costing" Optionen wie Maut/Autobahn/Spielstraßen/Grenzübergänge/Fähren vermeiden
- multimodales Routing (**noch nicht** verfügbar auf dem FOSSGIS Server)
- Verkehrseinbindung, live & historisch (**nicht** verfügbar auf dem FOSSGIS Server)

Die vollständige Dokumentation findet man in der [Dokumentation](https://github.com/valhalla/valhalla/blob/master/docs/api/turn-by-turn/api-reference.md#automobile-and-bus-costing-options). Eine weitere Besonderheit von Valhalla ist, dass die meisten obigen Optionen für **alle Endpunkte** gelten, also kann man sogar eine Matrix berechnen die solche Parameter bei der Routenfindung beachtet.

## Wie nutze ich Valhalla?

Der Server ist erreichbar auf der URL https://valhalla1.openstreetmap.de und bisher leider nur als Backend zu verwenden. Die folgende Endpunkte sind freigeschaltet:
- [`/route`](https://github.com/valhalla/valhalla/blob/master/docs/api/turn-by-turn/api-reference.md): Eine Route mit bis zu 20 Wegpunkten berechnen
- [`/sources_to_targets](https://github.com/valhalla/valhalla/blob/master/docs/api/matrix/api-reference.md): Bis zu 50 OD Paare mit gleichen Parametern wie der `/route` Endpunkt
- [`/isochrone`](https://github.com/valhalla/valhalla/blob/master/docs/api/isochrone/api-reference.md]: Bis zu 100 Minuten/150 Kilometer Isochronen & Isodistanzen mit gleichen Parametern wie der `/route` Endpunkt
- [`optimized_route`](https://github.com/valhalla/valhalla/blob/master/docs/api/optimized/api-reference.md): Lösung des Traveling Salesman Problem
- [`/trace_route`, `trace_attributes`](https://github.com/valhalla/valhalla/blob/master/docs/api/map-matching/api-reference.md): Map-matching
- [`/status`](https://github.com/valhalla/valhalla/blob/master/docs/api/status/api-reference.md): Healthcheck und data timestamp

Es gibt jedoch eine Reihe unterstützender FOSS für Valhalla um den Einstieg zu erleichtern:
- [Valhalla JS Demos](https://github.com/valhalla/demos)
- [QGIS Plugin](plugins.qgis.org/plugins/valhalla/)

**Wichtig**: Ähnlich zu den Bestandsservern (z.Bsp. OSRM) müssen wir auch hier auf die begrenzten Ressourcen aufpassen. Daher lassen wir vorerst nur 1 Request pro Nutzer pro Sekunde zu, darüber hinaus bekommt man 429 HTTP Fehler zurück.

## Valhalla & OSRM

Man könnte annehmen dass es sich bei beiden um Konkurrenten handelt. Tatsächlich erfüllen sie sehr unterschiedliche Aufgaben in ihrem derzeitigen Entwicklungsstadium und ergänzen sich funktional hervorragend: während OSRM sich über riesige Matrizen in Rekordzeit freut, ist Valhalla feinfühliger und kann auch sehr spezielle Routingoptionen wunderbar umsetzen.
